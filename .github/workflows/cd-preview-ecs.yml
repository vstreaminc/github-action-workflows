name: CD Preview ECS
on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      tag:
        required: true
        type: string
      repository:
        required: true
        type: string
      app:
        required: true
        type: string
      open:
        required: true
        type: boolean
        default: true
      labels:
        required: true
        type: string
      ref:
        required: true
        type: string
      exclusive:
        type: boolean
        default: true
      env-label:
        description: "YAML formatted {environment}: {label} map"
        type: string
        default: |
          preview: deploy
      spacelift-organization:
        description: "Spacelift organization"
        type: string
        required: true
    secrets:
      secret-outputs-passphrase:
        description: "Passphrase for secret outputs"
        required: true
      github-private-actions-pat:
        required: true
      spacelift-api-key-id:
        required: true
      spacelift-api-key-secret:
        required: true

permissions:
  pull-requests: write
  deployments: write
  id-token: write
  contents: read

jobs:
  preview:
    runs-on: ["self-hosted"]
    steps:
      - name: Preview deployments controller
        uses: cloudposse/github-action-preview-environment-controller@0.8.0
        id: controller
        with:
          labels: ${{ inputs.labels }}
          open: ${{ inputs.open }}
          env-label: ${{ inputs.env-label }}

    outputs:
      namespace: ${{ inputs.ref }}
      labels_env: ${{ steps.controller.outputs.labels_env }}
      deploy_envs: ${{ steps.controller.outputs.deploy_envs }}
      destroy_envs: ${{ steps.controller.outputs.destroy_envs }}

  deploy:
    runs-on: ubuntu-latest
    if: ${{ needs.preview.outputs.deploy_envs != '[]'  }}
    strategy:
      matrix:
        env: ${{ fromJson(needs.preview.outputs.deploy_envs) }}
    environment:
      name: ${{ matrix.env }}
      url: ${{ steps.deploy.outputs.webapp-url }}
    needs: [ preview ]
    steps:
      - uses: cloudposse/github-action-secret-outputs@0.1.0
        id: image
        with:
          secret: ${{ secrets.secret-outputs-passphrase }}
          op: decode
          in: ${{ inputs.image }}

      - name: Deactive environment
        uses: bobheadxi/deployments@v1
        if: ${{ inputs.exclusive }}
        with:
          step: deactivate-env
          token: ${{ github.token }}
          env: ${{ matrix.env }}
          desc: Environment purged

      - name: Checkout
        uses: actions/checkout@v3
      - name: Environment Info
        uses: cloudposse/github-action-interface-environment@0.2.0
        id: environment
        with:
          implementation_repository: vstreaminc/github-action-environments
          implementation_path: ''
          implementation_ref: main
          implementation_github_pat: ${{ secrets.github-private-actions-pat }}
          environment: ${{ matrix.env }}
          namespace: ${{ inputs.environment }}
          repository: ${{ inputs.repository }}
          application: ${{ inputs.app }}
          attributes: "us-west-2"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-region: ${{ steps.environment.outputs.region }}
          role-to-assume: ${{ steps.environment.outputs.role }}
          role-skip-session-tagging: true

      - name: Deploy
        uses: cloudposse/github-action-deploy-ecs@0.1.0
        id: deploy
        with:
          stack: ${{ steps.environment.outputs.cluster }}
          region: ${{ steps.environment.outputs.region }}
          ssm-path: ${{ steps.environment.outputs.ssm-path }}
          namespace: ${{ steps.environment.outputs.namespace }}
          image: ${{ steps.image.outputs.out }}
          image-tag: ${{ inputs.tag }}
          operation: deploy
          debug: false
          github_token: ${{ secrets.github-private-actions-pat }}
          organization: ${{ inputs.spacelift-organization }}
          api_key_id: ${{ secrets.spacelift-api-key-id }}
          api_key_secret: ${{ secrets.spacelift-api-key-secret }}

  cleanup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: ${{ fromJson(needs.preview.outputs.destroy_envs) }}
    permissions:
      pull-requests: write
      deployments: write
      id-token: write
      contents: read
    needs: [ preview ]
    steps:
      - name: Seek deployment
        uses: cloudposse/github-action-seek-deployment@0.1.0
        id: deployment
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          environment: ${{ matrix.env }}
          ref: ${{ inputs.ref }}
          status: success

      - name: Inactivate deployment
        uses: chrnorm/deployment-status@v2.0.0
        if: ${{ steps.deployment.outputs.id != '' }}
        with:
          state: inactive
          token: ${{ github.token }}
          deployment-id: ${{ steps.deployment.outputs.id }}

      - name: Cleanup label
        uses: cloudposse/github-action-preview-labels-cleanup@0.1.0
        if: ${{ ! inputs.open }}
        with:
          labels_env: ${{ needs.preview.outputs.labels_env }}
          env: ${{ matrix.env }}
